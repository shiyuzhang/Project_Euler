'''
Quest 1: 
If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
'''

def sum (number1, number2):
    # calculate the sum of arithmetic sequence
    n = (number2 - 1) / number1
    return n * number1 + (n * (n - 1) * number1) / 2

result = sum(3,1000) + sum(5, 1000) - sum(15, 1000)
print ("result = " + str(result))


'''
Quest 2:
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''

def fib (number):
    if number <= 2:
        return 1
    else:
        if (number % 2):
			return (fib(number/2) * fib(number/2) + fib(number/2 + 1) * fib(number/2 + 1))
        else:
			return (fib(number/2) * ( 2 * fib(number/2 + 1) - fib(number/2)))
			
fibn, sum, i = 0, 0, 0
while fibn <= 4000000:
    if (fibn % 2 == 0):
        sum += fibn
    i += 1
    fibn = fib (i)
print ("result = " + str (sum))
